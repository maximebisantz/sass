/**
 *   GRID SCSS - Used to create a column based grid to
 *    produce layout.
 * 
 *  Taken from examples: 
 *        - https://webdesign.tutsplus.com/tutorials/a-simple-responsive-grid-made-even-better-with-sass--cms-21540
 *        - http://inspirationalpixels.com/tutorials/grid-system-with-sass
 * 
 */

@import "../mixins/mixins";
@import "../variables/variables";

*, *:after, *:before{
  margin: 0;
  padding: 0;
  
  @include border-box;
}

%clearfix{
  *zoom: 1;
  &:before,
  &:after{
    content: " ";
    display: table;
  }
  &:after{
    clear: both;
  }
}

.wrapper, .row{
  @extend %clearfix;
}

.wrapper{
  width: 100%;
  margin: 0 auto;
}

// Adds margin to a row following a row.
.row{
  & + &{
    margin-top: $grid-spacing;
  }
}

// Working mobile-first
[class^="col-"]{
  float: left;
  margin-right: $grid-spacing;
  width: 90%;
  padding: 0 $grid-padding;
  min-height: 1px;
  
  @include border-box;
  
  &:last-child{
    margin-right: 0%;
  }
}

// Medium viewport
@media #{$breakpoint-medium} {
  
  @for $i from 1 through $grid-columns{
    
    .col-#{$i} {
      width: (100% / ($grid-columns/$i)) - ($grid-spacing * ($grid-columns - $i)/$grid-columns);
    }
    
  }
  
  .wrapper{
    max-width: $grid-max-width;
  }
  
  
}
